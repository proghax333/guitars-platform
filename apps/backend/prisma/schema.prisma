generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URI")
}

model Test {
  dbId String @id @default(auto()) @map("_id") @db.ObjectId
  id   String @unique @default(uuid())
}

model Account {
  dbId            String            @id @default(auto()) @map("_id") @db.ObjectId
  id              String            @unique @default(uuid())
  profiles        Profile[]
  accountSettings AccountSettings[]
}

model Role {
  dbId     String    @id @default(auto()) @map("_id") @db.ObjectId
  id       String    @unique @default(uuid())
  profiles Profile[]
}

model Profile {
  dbId String @id @default(auto()) @map("_id") @db.ObjectId
  id   String @unique @default(uuid())

  roleId    String
  accountId String

  name                String
  description         String
  profilePicture      String
  profileSettings     ProfileSettings[]
  productSellPostings ProductSellPosting[]

  role    Role    @relation(fields: [roleId], references: [id])
  account Account @relation(fields: [accountId], references: [id])
}

model AccountSettings {
  dbId    String  @id @default(auto()) @map("_id") @db.ObjectId
  id      String  @unique @default(uuid())
  account Account @relation(fields: [id], references: [id])
}

model ProfileSettings {
  dbId    String  @id @default(auto()) @map("_id") @db.ObjectId
  id      String  @unique @default(uuid())
  profile Profile @relation(fields: [id], references: [id])
}

model ProductVariantResource {
  dbId    String  @id @default(auto()) @map("_id") @db.ObjectId
  id      String  @unique @default(uuid())
  variant Variant @relation(fields: [id], references: [id])
}

model Variant {
  dbId      String @id @default(auto()) @map("_id") @db.ObjectId
  id        String @unique @default(uuid())
  productId String

  name        String
  description String
  type        String

  resources           ProductVariantResource[]
  productSellPostings ProductSellPosting[]

  product Product @relation(fields: [productId], references: [id])
}

model Product {
  dbId        String    @id @default(auto()) @map("_id") @db.ObjectId
  id          String    @unique @default(uuid())
  code        String
  name        String
  description String
  variants    Variant[]
}

model ProductSellPosting {
  dbId                   String @id @default(auto()) @map("_id") @db.ObjectId
  id                     String @unique @default(uuid())
  variantId              String
  sellerId               String
  sellingPrice           String
  baseDiscountPercentage String

  variant Variant @relation(fields: [variantId], references: [id])
  seller  Profile @relation(fields: [sellerId], references: [id])
}
